{
  "name": "Personal Assistant Agent",
  "description": "A comprehensive personal assistant agent using LangGraph that can handle various tasks including web search, file management, academic research, and more",
  "version": "1.0.0",
  "entry_point": "personal_assistant_agent.py",
  "agent_type": "persistent",
  "agent_class": "PersonalAssistantAgent",
  "requires_initialization": true,
  "author": "AgentHub Team",
  "email": "team@agenthub.com",
  "pricing_model": "per_use",
  "price_per_use": 0.4,
  "requirements": [
    "langchain",
    "langchain-core",
    "langchain-community",
    "langgraph",
    "langchain-openai",
    "pydantic",
    "python-dotenv",
    "pypdf",
    "aiohttp",
    "typing-extensions"
  ],
  "lifecycle": {
    "initialize": "initialize",
    "execute": "execute",
    "cleanup": "cleanup"
  },
  "config_schema": {
    "functions": [
      {
        "name": "initialize",
        "description": "Initialize the personal assistant with custom configuration",
        "inputSchema": {
          "type": "object",
          "properties": {
            "system_prompt": {
              "type": "string",
              "description": "Custom system prompt for the assistant",
              "default": "You are a helpful personal assistant with access to various tools. You can help with web searches, file management, academic research, and more. Always be helpful and provide detailed responses."
            },
            "enable_memory": {
              "type": "boolean",
              "description": "Whether to enable memory storage for the user",
              "default": true
            },
            "max_tokens": {
              "type": "integer",
              "description": "Maximum number of tokens for the response",
              "default": 2000
            },
            "temperature": {
              "type": "number",
              "description": "Temperature for response generation (0.0 to 1.0)",
              "default": 0.1
            },
            "model_name": {
              "type": "string",
              "description": "OpenAI model to use",
              "default": "gpt-4"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Initialization status",
              "enum": ["success", "error"]
            },
            "message": {
              "type": "string",
              "description": "Initialization result message"
            },
            "agent_id": {
              "type": "string",
              "description": "Unique identifier for the initialized agent"
            },
            "capabilities": {
              "type": "array",
              "description": "List of enabled capabilities",
              "items": {"type": "string"}
            },
            "configuration": {
              "type": "object",
              "description": "Applied configuration settings",
              "properties": {
                "system_prompt": {"type": "string"},
                "enable_memory": {"type": "boolean"},
                "max_tokens": {"type": "integer"},
                "temperature": {"type": "number"},
                "model_name": {"type": "string"}
              }
            }
          },
          "required": ["status", "message"],
          "additionalProperties": false
        }
      },
      {
        "name": "execute",
        "description": "Execute a user request or task",
        "inputSchema": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "The message or request from the user"
            },
            "user_id": {
              "type": "string",
              "description": "Unique identifier for the user",
              "default": "default_user"
            }
          },
          "required": ["message"],
          "additionalProperties": false
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "response": {
              "type": "string",
              "description": "The assistant's response to the user request"
            },
            "user_id": {
              "type": "string",
              "description": "User identifier for the request"
            },
            "task_type": {
              "type": "string",
              "description": "Type of task that was executed"
            },
            "tools_used": {
              "type": "array",
              "description": "List of tools used to complete the task",
              "items": {"type": "string"}
            },
            "execution_time": {
              "type": "number",
              "description": "Time taken to execute the task in seconds"
            },
            "memory_updated": {
              "type": "boolean",
              "description": "Whether user memory was updated"
            },
            "timestamp": {
              "type": "string",
              "description": "ISO timestamp of when the task was completed"
            }
          },
          "required": ["response", "user_id"],
          "additionalProperties": false
        }
      },
      {
        "name": "cleanup",
        "description": "Clean up resources and perform cleanup operations",
        "inputSchema": {
          "type": "object",
          "properties": {},
          "additionalProperties": false
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Cleanup status",
              "enum": ["success", "error"]
            },
            "message": {
              "type": "string",
              "description": "Cleanup result message"
            },
            "resources_freed": {
              "type": "array",
              "description": "List of resources that were freed",
              "items": {"type": "string"}
            },
            "memory_persisted": {
              "type": "boolean",
              "description": "Whether user memory was persisted"
            },
            "cleanup_time": {
              "type": "number",
              "description": "Time taken for cleanup in seconds"
            }
          },
          "required": ["status", "message"],
          "additionalProperties": false
        }
      }
    ]
  },
  "capabilities": [
    "web_search",
    "file_management",
    "academic_research",
    "memory_storage",
    "python_execution",
    "pdf_processing",
    "shell_commands"
  ],
  "tags": [
    "personal_assistant",
    "langgraph",
    "multimodal",
    "research",
    "productivity"
  ]
} 