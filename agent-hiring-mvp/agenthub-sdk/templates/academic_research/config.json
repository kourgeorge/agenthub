{
  "name": "Academic Research Agent",
  "description": "A functional agent that performs comprehensive academic research by searching across Semantic Scholar, arXiv, and Google Scholar to find papers, summarize research, and identify gaps",
  "version": "1.0.0",
  "entry_point": "academic_research.py",
  "author": "AgentHub Team",
  "email": "team@agenthub.com",
  "tags": [
    "academic",
    "research",
    "papers",
    "scholarly",
    "semantic-scholar",
    "arxiv",
    "google-scholar",
    "literature-review",
    "academic-analysis"
  ],
  "agent_type": "function",
  "pricing_model": "per_use",
  "price_per_use": 0.3,
  "requirements": ["openai", "requests", "python-dotenv", "PyPDF2"],
  "config_schema": {
    "functions": [
      {
        "name": "execute",
        "description": "Perform comprehensive academic research by searching across multiple academic sources",
        "inputSchema": {
          "type": "object",
          "properties": {
            "topic": {
              "type": "string",
              "description": "Academic research topic, paper title, or domain to investigate"
            },
            "max_papers_per_source": {
              "type": "integer",
              "description": "Maximum number of papers to retrieve per academic source (5-20)",
              "minimum": 5,
              "maximum": 20
            },
            "search_depth": {
              "type": "integer",
              "description": "How deep to go in search queries and analysis (1-3)",
              "minimum": 1,
              "maximum": 3
            },
            "model": {
              "type": "string",
              "description": "OpenAI model to use for analysis and summarization",
              "enum": ["gpt-3.5-turbo", "gpt-4", "gpt-4-turbo", "gpt-4o", "gpt-4o-mini"]
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Execution status",
              "enum": ["success", "error"]
            },
            "topic": {
              "type": "string",
              "description": "The research topic that was investigated"
            },
            "summary": {
              "type": "string",
              "description": "Comprehensive academic research summary"
            },
            "papers": {
              "type": "array",
              "description": "List of academic papers found",
              "items": {
                "type": "object",
                "properties": {
                  "title": {"type": "string"},
                  "abstract": {"type": "string"},
                  "authors": {"type": "array", "items": {"type": "string"}},
                  "year": {"type": "integer"},
                  "venue": {"type": "string"},
                  "citation_count": {"type": "integer"},
                  "url": {"type": "string"},
                  "source": {"type": "string"}
                }
              }
            },
            "key_findings": {
              "type": "array",
              "description": "Key findings from the research",
              "items": {"type": "string"}
            },
            "research_gaps": {
              "type": "array",
              "description": "Identified research gaps",
              "items": {"type": "string"}
            },
            "emerging_trends": {
              "type": "array",
              "description": "Emerging trends in the research area",
              "items": {"type": "string"}
            },
            "stats": {
              "type": "object",
              "description": "Research statistics",
              "properties": {
                "total_papers": {"type": "integer"},
                "papers_by_source": {"type": "object"},
                "total_findings": {"type": "integer"},
                "total_gaps": {"type": "integer"},
                "total_trends": {"type": "integer"},
                "pdfs_analyzed": {"type": "integer"}
              }
            },
            "error": {
              "type": "string",
              "description": "Error message when status is error"
            }
          },
          "required": ["status"],
          "additionalProperties": false
        }
      }
    ]
  }
} 