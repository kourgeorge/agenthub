{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AgentHub Agent Configuration Schema",
  "description": "Schema for validating AgentHub agent configuration files",
  "type": "object",
  "required": ["name", "description", "version", "author", "email", "entry_point", "agent_type"],
  "properties": {
    "name": {
      "type": "string",
      "description": "The name of the agent",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[a-zA-Z0-9\\s\\-_]+$"
    },
    "description": {
      "type": "string",
      "description": "A detailed description of what the agent does",
      "minLength": 10,
      "maxLength": 1000
    },
    "version": {
      "type": "string",
      "description": "Version of the agent (semantic versioning recommended)",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "examples": ["1.0.0", "2.1.3"]
    },
    "author": {
      "type": "string",
      "description": "Name of the agent author",
      "minLength": 1,
      "maxLength": 100
    },
    "email": {
      "type": "string",
      "description": "Email address of the agent author",
      "format": "email",
      "maxLength": 255
    },
    "entry_point": {
      "type": "string",
      "description": "The main Python file that contains the agent's main function",
      "pattern": "^[a-zA-Z0-9_\\-\\.]+\\.py$",
      "examples": ["agent.py", "main.py", "stock_market_agent.py"]
    },
    "agent_type": {
      "type": "string",
      "description": "Type of agent",
      "enum": ["function", "acp", "persistent"],
      "default": "function"
    },
    "agent_class": {
      "type": "string",
      "description": "Name of the agent class (required for persistent agents)",
      "maxLength": 100
    },
    "requires_initialization": {
      "type": "boolean",
      "description": "Whether the agent requires explicit initialization",
      "default": false
    },
    "config_schema": {
      "type": "object",
      "description": "Schema defining the input parameters for the agent",
      "additionalProperties": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "description": "Data type of the parameter",
            "enum": ["string", "number", "integer", "float", "boolean", "choice", "select", "textarea", "array", "object"]
          },
          "label": {
            "type": "string",
            "description": "Human-readable label for the parameter",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the parameter",
            "maxLength": 500
          },
          "required": {
            "type": "boolean",
            "description": "Whether the parameter is required",
            "default": false
          },
          "placeholder": {
            "type": "string",
            "description": "Placeholder text for input fields",
            "maxLength": 200
          },
          "default": {
            "description": "Default value for the parameter"
          },
          "min": {
            "type": "number",
            "description": "Minimum value for numeric parameters"
          },
          "max": {
            "type": "number",
            "description": "Maximum value for numeric parameters"
          },
          "minimum": {
            "type": "number",
            "description": "Minimum value for numeric parameters (backend format)"
          },
          "maximum": {
            "type": "number",
            "description": "Maximum value for numeric parameters (backend format)"
          },
          "pattern": {
            "type": "string",
            "description": "Regex pattern for string validation"
          },
          "options": {
            "type": "array",
            "description": "Available options for choice/select parameters",
            "items": {
              "type": "object",
              "required": ["value", "label"],
              "properties": {
                "value": {
                  "description": "The actual value that will be passed to the agent"
                },
                "label": {
                  "type": "string",
                  "description": "Human-readable label for the option",
                  "maxLength": 100
                }
              },
              "additionalProperties": false
            },
            "minItems": 1
          },
          "choices": {
            "type": "array",
            "description": "Legacy format for choice options (array of strings)",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "items": {
            "description": "Schema for array items (when type is 'array')"
          },
          "properties": {
            "type": "object",
            "description": "Properties for object type parameters"
          }
        },
        "allOf": [
          {
            "if": {
              "properties": { "type": { "enum": ["choice", "select"] } }
            },
            "then": {
              "anyOf": [
                { "required": ["options"] },
                { "required": ["choices"] }
              ]
            }
          },
          {
            "if": {
              "properties": { "type": { "enum": ["choice"] } }
            },
            "then": {
              "not": {
                "required": ["options", "choices"]
              }
            }
          },
          {
            "if": {
              "properties": { "type": { "enum": ["array"] } }
            },
            "then": {
              "required": ["items"]
            }
          },
          {
            "if": {
              "properties": { "type": { "enum": ["object"] } }
            },
            "then": {
              "required": ["properties"]
            }
          }
        ]
      }
    },
    "requirements": {
      "type": "array",
      "description": "List of Python package dependencies",
      "items": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\-_\\.]+(?:[<>=!~]+[0-9\\.]+)?$"
      }
    },
    "tags": {
      "type": "array",
      "description": "Tags for categorizing and searching the agent",
      "items": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\-_]+$",
        "maxLength": 50
      }
    },
    "category": {
      "type": "string",
      "description": "Category of the agent",
      "maxLength": 100,
      "examples": ["Financial Analysis", "Research", "Data Processing", "Communication", "General"]
    },
    "pricing_model": {
      "type": "string",
      "description": "Pricing model for the agent",
      "enum": ["free", "per_use", "monthly"],
      "default": "free"
    },
    "price_per_use": {
      "type": "number",
      "description": "Price per execution (for per_use pricing)",
      "minimum": 0
    },
    "monthly_price": {
      "type": "number",
      "description": "Monthly price (for monthly pricing)",
      "minimum": 0
    },
    "max_execution_time": {
      "type": "integer",
      "description": "Maximum execution time in seconds",
      "minimum": 1,
      "maximum": 3600,
      "default": 30
    },
    "memory_limit": {
      "type": "string",
      "description": "Memory limit for the agent",
      "pattern": "^\\d+[KMG]B$",
      "examples": ["100MB", "1GB", "512MB"],
      "default": "100MB"
    },
    "lifecycle": {
      "type": "object",
      "description": "Lifecycle configuration for the agent",
      "properties": {
        "initialize": {
          "type": "string",
          "description": "Function name for initialization (required if requires_initialization is true)"
        },
        "execute": {
          "type": "string",
          "description": "Function name for execution",
          "default": "execute"
        },
        "cleanup": {
          "type": "string",
          "description": "Function name for cleanup (optional)",
          "default": "cleanup"
        }
      },
      "required": ["execute"],
      "additionalProperties": false
    },
    "acp_manifest": {
      "type": "object",
      "description": "ACP server manifest (required for acp agents)",
      "properties": {
        "acp_version": {
          "type": "string",
          "description": "ACP protocol version"
        },
        "endpoints": {
          "type": "object",
          "description": "Available endpoints",
          "properties": {
            "health": {
              "type": "string",
              "description": "Health check endpoint"
            },
            "chat": {
              "type": "string",
              "description": "Chat endpoint"
            },
            "tools": {
              "type": "string",
              "description": "Tools endpoint"
            }
          }
        },
        "capabilities": {
          "type": "array",
          "description": "Agent capabilities",
          "items": {
            "type": "string"
          }
        },
        "deployment": {
          "type": "object",
          "description": "Deployment configuration",
          "properties": {
            "port": {
              "type": "integer",
              "description": "Port number"
            },
            "health_check_path": {
              "type": "string",
              "description": "Health check path"
            },
            "startup_timeout": {
              "type": "integer",
              "description": "Startup timeout in seconds"
            },
            "shutdown_timeout": {
              "type": "integer",
              "description": "Shutdown timeout in seconds"
            }
          }
        }
      }
    },
    "examples": {
      "type": "array",
      "description": "Example usage scenarios for the agent",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the example"
          },
          "description": {
            "type": "string",
            "description": "Description of the example"
          },
          "input": {
            "type": "object",
            "description": "Example input data"
          }
        }
      }
    },
    "capabilities": {
      "type": "array",
      "description": "List of agent capabilities",
      "items": {
        "type": "string"
      }
    },
    "state_storage": {
      "type": "object",
      "description": "State storage configuration for persistent agents",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of state storage",
          "enum": ["file", "database", "memory"]
        },
        "path": {
          "type": "string",
          "description": "Path for file-based storage"
        },
        "persistence": {
          "type": "boolean",
          "description": "Whether state should persist across restarts"
        }
      },
      "additionalProperties": false
    },
    "limitations": {
      "type": "array",
      "description": "List of agent limitations",
      "items": {
        "type": "string"
      }
    }
  },
  "allOf": [
    {
      "if": {
        "properties": { "pricing_model": { "enum": ["per_use"] } }
      },
      "then": {
        "required": ["price_per_use"]
      }
    },
    {
      "if": {
        "properties": { "pricing_model": { "enum": ["monthly"] } }
      },
      "then": {
        "required": ["monthly_price"]
      }
    },
    {
      "if": {
        "properties": { "agent_type": { "enum": ["acp"] } }
      },
      "then": {
        "required": ["acp_manifest"]
      }
    },
    {
      "if": {
        "properties": { "agent_type": { "enum": ["persistent"] } }
      },
      "then": {
        "required": ["agent_class"]
      }
    },
    {
      "if": {
        "properties": { "requires_initialization": { "const": true } }
      },
      "then": {
        "properties": {
          "lifecycle": {
            "required": ["initialize"]
          }
        }
      }
    }
  ],
  "additionalProperties": false
} 